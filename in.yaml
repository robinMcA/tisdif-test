---
# Source: influxdb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tisdif-influxdb
  labels:
    helm.sh/chart: influxdb-4.8.1
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
---
# Source: influxdb/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: tisdif-influxdb-auth
  labels:
    helm.sh/chart: influxdb-4.8.1
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
data:
  influxdb-password: "dmFYWFRHako2cg=="
  influxdb-user: "YWRtaW4="
---
# Source: influxdb/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: tisdif-influxdb
  labels:
    helm.sh/chart: influxdb-4.8.1
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
data:
  influxdb.conf: |+
    reporting-disabled = false
    bind-address = ":8088"

    [meta]
      dir = "/var/lib/influxdb/meta"

    [data]
      dir = "/var/lib/influxdb/data"
      wal-dir = "/var/lib/influxdb/wal"

    [coordinator]

    [retention]

    [shard-precreation]

    [monitor]

    [subscriber]

    [http]

    # TODO: allow multiple graphite listeners

    [[graphite]]

    # TODO: allow multiple collectd listeners with templates

    [[collectd]]

    # TODO: allow multiple opentsdb listeners with templates

    [[opentsdb]]

    # TODO: allow multiple udp listeners with templates

    [[udp]]

    [continuous_queries]

    [logging]
---
# Source: influxdb/templates/init-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: tisdif-influxdb-init
  labels:
    helm.sh/chart: influxdb-4.8.1
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
data:
  init.iql: |+
    CREATE DATABASE "tisdif" WITH DURATION 365d REPLICATION 1 NAME "rp_365d"
---
# Source: influxdb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tisdif-influxdb
  labels:
    helm.sh/chart: influxdb-4.8.1
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
spec:
  type: NodePort
  ports:
    - name: api
      port: 8086
      targetPort: api
    - name: rpc
      port: 8088
      targetPort: rpc
  selector:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
---
# Source: influxdb/templates/statefulset.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tisdif-influxdb
  labels:
    helm.sh/chart: influxdb-4.8.1
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb
      app.kubernetes.io/instance: tisdif
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb
        app.kubernetes.io/instance: tisdif
    spec:
      securityContext:
        runAsGroup: 999
        runAsUser: 999
      serviceAccountName: tisdif-influxdb
      containers:
        - name: tisdif-influxdb
          image: "influxdb:1.8.0-alpine"
          imagePullPolicy: "IfNotPresent"
          resources: {}
          ports:
            - name: api
              containerPort: 8086
            - name: rpc
              containerPort: 8088
          env:
            - name: INFLUXDB_DB
              value: tisdif
          livenessProbe:
            httpGet:
              path: /ping
              port: api
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: api
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: tisdif-influxdb-data
              mountPath: /var/lib/influxdb
            - name: config
              mountPath: /etc/influxdb
            - name: init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: config
          configMap:
            name: tisdif-influxdb
        - name: init
          configMap:
            name: tisdif-influxdb-init
        - name: tisdif-influxdb-data
          persistentVolumeClaim:
            claimName: tisdif-influxdb-data
---
# Source: home-assistant/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: tisdif-influxdb-data
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "15Gi"
---
# Source: influxdb/templates/backup-cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: tisdif-influxdb-backup
  labels:
    helm.sh/chart: influxdb-4.8.1
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
    app.kubernetes.io/component: backup
  annotations: {}
spec:
  schedule: "0 0 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: influxdb
            app.kubernetes.io/instance: tisdif
        spec:
          restartPolicy: OnFailure
          volumes:
            - name: backup
              emptyDir: {}
          serviceAccountName: tisdif-influxdb
          containers:
            - name: influxdb-backup
              image: "influxdb:1.8.0-alpine"
              volumeMounts:
                - name: backup
                  mountPath: /backup
              command:
                - /bin/sh
              args:
                - "-c"
                - |
                  influxd backup \
                    -host tisdif-influxdb:8088 \
                    -portable /backup/"$(date +%Y%m%d%H%M%S)"
              resources:
                requests:
                  ephemeral-storage: 8Gi
---
# Source: influxdb/templates/post-install-set-auth.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: tisdif-influxdb-set-auth
  labels:
    helm.sh/chart: influxdb-4.8.1
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: tisdif
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  activeDeadlineSeconds:
  backoffLimit: 6
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb
        app.kubernetes.io/instance: tisdif
    spec:
      containers:
        - name: tisdif-influxdb-set-auth
          image: "appropriate/curl:latest"
          env:
            - name: INFLUXDB_USER
              valueFrom:
                secretKeyRef:
                  name: tisdif-influxdb-auth
                  key: influxdb-user
            - name: INFLUXDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tisdif-influxdb-auth
                  key: influxdb-password
          args:
            - "/bin/sh"
            - "-c"
            - |
              curl -X POST http://tisdif-influxdb:8086/query \
              --data-urlencode \
              "q=CREATE USER \"${INFLUXDB_USER}\" WITH PASSWORD '${INFLUXDB_PASSWORD}' WITH ALL PRIVILEGES"
      restartPolicy: OnFailure
